// üß† Exerc√≠cio 1 ‚Äì Nome Formatado
// Descri√ß√£o:
// Dado um nome completo digitado pelo usu√°rio (possivelmente com espa√ßos extras e letras min√∫sculas), retorne o nome com:

// Primeira letra de cada palavra em mai√∫scula

// Restante em min√∫sculas

// Sem espa√ßos extras nas pontas

// Exemplo:
// formatarNome("   peDro    henrique  DE oliveira ") 
// ‚Üí "Pedro Henrique De Oliveira"

// #########################################################################

// function nomeFormatado(str) {
//     if(str.trim() === '') return false;

//     const palavras = str.trim().split(/\s+/);

//     const formatarPalavras = palavras.map(palavra => palavra.charAt(0).toUpperCase() + palavra.slice(1).toLowerCase())
//     .join(' ')
    
//     return formatarPalavras;

// }

// console.log(nomeFormatado('   pedro henrique de oliveira   '))

// #########################################################################

// _________________________________________________________________________________________________________________________________
// üß† Exerc√≠cio 2 ‚Äì C√≥digo do Produto
// Descri√ß√£o:
// Dado um nome de produto digitado pelo usu√°rio, gere um ‚Äúc√≥digo‚Äù para URL.
// Regras:

// Tudo em min√∫sculo

// Sem espa√ßos nas pontas

// Espa√ßos no meio viram h√≠fens (-)

// Exemplo:
// gerarCodigoProduto("   Camisa Branca Gola Polo   ") 
// ‚Üí "camisa-branca-gola-polo"

// #########################################################################

// function createUrl(str) {

//     if(!str || str.trim() === '') return false;

//     const lowCase = str.trim().toLowerCase();

//     const url = lowCase.split(/\s+/).join('-')

//     return url;
// }

// console.log(createUrl('Camisa     Branca Gola Polo'));

// #########################################################################

// _________________________________________________________________________________________________________________________________
// üß† Exerc√≠cio 3 ‚Äì Contador de Palavras
// Descri√ß√£o:
// Receba uma string e retorne quantas palavras reais ela tem (ignorando espa√ßos extras entre palavras).

// Exemplo:

// contarPalavras("  Ol√°,    Pedro! Como voc√™  est√°?  ") 
// ‚Üí 5

// function contadorPalavras(str) {

//     if(!str || str.trim() === '') return 0;

//     const semPontuacao = str.replace(/[^\w\s]/g)

//     const palavras = semPontuacao.trim().split(/\s+/);

//     return palavras.length;
// }

// console.log(contadorPalavras('  '));

// _________________________________________________________________________________________________________________________________
// üß† Exerc√≠cio 4 ‚Äì Primeiras Letras
// Descri√ß√£o:
// Receba uma frase e retorne as primeiras letras de cada palavra, todas em mai√∫scula, juntas em uma s√≥ string (como uma sigla).

// Exemplo:

// sigla("  Pedro Henrique de Oliveira  ") 
// ‚Üí "PHO"

function primeirasLetras(str) {
    if(!str || str.trim() === '') return false;

    const semPontuacao = str.replace(/[^\s\w]/g, '')

    const palavras = semPontuacao.trim().split(/\s+/);


    const primeiraLetra = palavras.map(palavra => palavra.charAt(0).toUpperCase())
    .join('');

    return primeiraLetra;
}

console.log(primeirasLetras('Pedro     Henrique de Oliveira Alves'));

// _________________________________________________________________________________________________________________________________
// üß† Exerc√≠cio 5 ‚Äì Texto com Pontua√ß√£o Final
// Descri√ß√£o:
// Dado um texto digitado pelo usu√°rio, verifique:

// Se a primeira letra est√° em mai√∫scula

// Se o texto termina com ponto final .

// Se n√£o, corrija

// Exemplo:
// corrigirTexto("isso √© um exemplo") 
// // ‚Üí "Isso √© um exemplo."

// _________________________________________________________________________________________________________________________________
// üß† Exerc√≠cio 6 ‚Äì Hashtag de Emo√ß√µes
// Descri√ß√£o:
// Receba uma frase com emo√ß√µes separadas por v√≠rgulas, e gere um array de hashtags formatadas corretamente.

// Exemplo:
// gerarHashtags(" feliz, animado, com sono ") 
// ‚Üí ["#Feliz", "#Animado", "#ComSono"]
