// üîÅ Exerc√≠cio 1 ‚Äì Somar dois n√∫meros
// Crie um m√≥dulo que exporta uma fun√ß√£o que recebe dois n√∫meros e retorna a soma.
// No arquivo principal, importe essa fun√ß√£o e exiba o resultado no console.

const valor1 = 10;
const valor2 = 5;

// Sua l√≥gica aqui... ###############################################################################################

// üîÅ Exerc√≠cio 2 ‚Äì Verificar se um n√∫mero √© par
// Crie um m√≥dulo que exporta uma fun√ß√£o que retorna true se o n√∫mero for par, e false se for √≠mpar.
// No arquivo principal, importe essa fun√ß√£o e teste com um n√∫mero qualquer.

const numeroParaTeste = 14;

// Sua l√≥gica aqui... ###############################################################################################



// üîÅ Exerc√≠cio 3 ‚Äì M√≥dulo de boas-vindas personalizado
// Crie um m√≥dulo que exporta uma fun√ß√£o que recebe o nome de uma pessoa e retorna:
// "Bem-vindo(a), [nome], ao sistema!"
// Importe e teste no arquivo principal.

const usuarioLogado = "Gabriela";

// Sua l√≥gica aqui... ###############################################################################################

// üîÅ Exerc√≠cio 4 ‚Äì M√≥dulo de multiplica√ß√£o
// Crie um m√≥dulo com uma fun√ß√£o que multiplica dois n√∫meros.
// No arquivo principal, importe e teste com dois valores diferentes.

const numeroA = 3;
const numeroB = 7;

// Sua l√≥gica aqui...###############################################################################################

// üîÅ Exerc√≠cio 5 ‚Äì M√≥dulo de valida√ß√£o de senha
// Crie um m√≥dulo que exporta uma fun√ß√£o que recebe uma senha e retorna true se ela tiver pelo menos 8 caracteres e conter "@"
// Importe no arquivo principal e teste com uma string.

const senhaTeste = "abc1234";

// Sua l√≥gica aqui...
