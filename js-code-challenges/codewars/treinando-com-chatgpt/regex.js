/*
  üöÄ REGEX ‚Äì Exerc√≠cios B√°sicos
  Obs: todos os exerc√≠cios devem ser resolvidos utilizando Express√µes Regulares.
  N√£o cont√©m respostas para facilitar versionamento no GitHub.
  Voc√™ pode usar ferramentas como regex101.com para testar.
*/

/* 
  Exerc√≠cio 01 ‚Äì Nome com apenas letras
  Descri√ß√£o: A string deve conter somente letras (mai√∫sculas ou min√∫sculas).
  M√≠nimo de 3 caracteres. Nada de n√∫meros, espa√ßos ou s√≠mbolos.
  Exemplos v√°lidos: "Pedro", "Maria"
  Exemplos inv√°lidos: "Jo", "Jo√£o123", "Ana!"
*/
const nomeApenasLetras = "Pedro";
const padrao = /^[A-Za-z]{3,}$/

const testaPadrao = padrao.test(nomeApenasLetras);
console.log(testaPadrao);

/* 
  Exerc√≠cio 02 ‚Äì N√∫mero com at√© duas casas decimais
  Descri√ß√£o: Validar n√∫mero inteiro ou decimal com at√© 2 casas, com ponto como separador.
  Exemplos v√°lidos: "10", "10.5", "10.50"
  Exemplos inv√°lidos: "10,50", "10.123", "dez"
*/
const numeroDecimal = "10.25";
const resultadoNumeroDecimal = null;

/*
  Exerc√≠cio 03 ‚Äì E-mail simples
  Descri√ß√£o: Validar um e-mail b√°sico no formato nome@dominio.com
  Exemplos v√°lidos: "joao@email.com", "maria123@abc.org"
  Exemplos inv√°lidos: "joao@email", "@email.com", "joao email.com"
*/
const emailSimples = "joao@email.com";
const resultadoEmailSimples = null;

/*
  Exerc√≠cio 04 ‚Äì CPF formatado
  Descri√ß√£o: Validar CPF no formato "000.000.000-00"
  Exemplos v√°lidos: "123.456.789-00"
  Exemplos inv√°lidos: "12345678900", "12.345.6789-00", "abc.def.ghi-jk"
*/
const cpfFormatado = "123.456.789-00";
const resultadoCPFFormatado = null;

/*
  Exerc√≠cio 05 ‚Äì Senha forte (n√≠vel 1)
  Descri√ß√£o: A senha deve ter no m√≠nimo 6 caracteres, e conter pelo menos uma letra e um n√∫mero.
  Exemplos v√°lidos: "abc123", "senha123"
  Exemplos inv√°lidos: "abcdef", "123456", "abc"
*/
const senhaForte1 = "abc123";
const resultadoSenhaForte1 = null;

/*
  Exerc√≠cio 06 ‚Äì Usu√°rio v√°lido
  Descri√ß√£o: Um nome de usu√°rio v√°lido deve ter entre 3 e 16 caracteres, usando apenas letras e n√∫meros.
  Exemplos v√°lidos: "user123", "Joao88"
  Exemplos inv√°lidos: "jo", "user_name", "user@site"
*/
const nomeUsuario = "user123";
const resultadoNomeUsuario = null;

/*
  Exerc√≠cio 07 ‚Äì Palavra que termina com "son"
  Descri√ß√£o: A string deve conter apenas letras e terminar com "son".
  Exemplos v√°lidos: "Jackson", "Emerson"
  Exemplos inv√°lidos: "son", "jack123son", "Emerson!"
*/
const terminaComSon = "Jackson";
const resultadoTerminaComSon = null;

/*
  Exerc√≠cio 08 ‚Äì Verificar se string tem espa√ßos
  Descri√ß√£o: Detectar se uma string cont√©m pelo menos um espa√ßo.
  Exemplos v√°lidos: "com espa√ßo"
  Exemplos inv√°lidos: "semEspaco"
*/
const contemEspaco = "Jo√£o Henrique";
const resultadoContemEspaco = null;
